<
<>
<#
=
>
-
,
;
:
!
?
/
.
."
.(
'
(
(;)
(.")
[
[']
]
{
{{
@
*
*/
**
**
**
**
\
#
#>
+
+!
0<
0<>
0=
0>
1-
1+
2-
2!
2/
2@
2*
2+
2constant
(2constant)
2drop
2dup
2literal
(2literal)
2local
(2local)
(@2Local)
(@2Local0)
2over
2>r
2r>
2r@
2rot
2swap
2value
2variable
8xx?
abort
abort"
abs
accept
add-cr
add-parse-step
again
alarm
align
aligned
allocate
allot
also
amd64?
and
arm?
base
begin
bin
bl
>body
body>
(branch)
(branch0)
(branch0-final)
(branch-final)
brand-wordlist
bsd?
bye
(c")
c,
c!
c"
c@
case
catch
cd
cell-
cell+
cells
char
(char)
(char*)
[char]
char+
chars
clock
clocks/sec
close-file
clr-errno
coldfire?
(colon)
compare
compare-insensitive
compile,
compile-only
constant
(constant)
convert
count
cpu
cr
create
(create)
create-file
darwin?
date
debug
debug-xt
decimal
definitions
delete-file
depth
dlclose
dlerror
dlexec
dlopen
dlsym
dnegate
do
?do
(?do)
(do)
do-does
(does)
does>
doLocal
do-vocabulary
drop
dump
dump-fd
dup
?dup
elapsed
else
[else]
emit
empty
endcase
endif
[endif]
end-locals
endof
end-prefixes
.env
env-2constant
env-constant
environment?
erase
errno
evaluate
execute
exit
(exit)
exit-inner
expect
f<
f=
f>
f-
f!
f/
f.
f@
f*
f+
f+!
f0<
f0=
f0>
f2!
f2@
f2constant
(f2constant)
f2drop
f2dup
(f2local)
(@f2Local)
f2over
f2swap
f2value
fallthrough
false
fcntl
fconstant
(fconstant)
fd@
fdepth
fdrop
fdup
f?dup
fe.
.features
f-i
f/i
f*i
f+i
ficl-named-wordlist
ficl-set-current
ficl-vocabulary
ficl-wordlist
file-position
file-size
file-status
fill
find
fliteral
(fliteral)
>float
?float
float>
float>int
(flocal)
(@fLocal)
flush-file
fm/mod
fnegate
forget
forget-wid
forth
forth-wordlist
fover
fpick
free
froll
f-roll
frot
f-rot
f.s
fswap
fvalue
get-current
getenv
get-order
get-pid
hash
.hash
here
hex
hidden
hide
hold
hostname
i
if
[if]
i-f
i/f
immediate
>in
include
included
include-file
inotify-add-watch
inotify-init
inotify-rm-watch
(int)
interpret
int>float
invert
ioctl
j
k
key
?key
kill
last-signal
last-word
leave
(link)
linux?
literal
(literal)
load
$load
local
(@local)
(local)
(@local0)
(@local1)
locals|
lookup
loop
(+loop)
(loop)
+loop
lshift
m*
marker
max
mdump-ascii-line
mdump-hex-line
min
mips?
mmap
mod
/mod
*/mod
move
ms
>name
negate
nip
:noname
now
>number
?number
nUser
?object
objectify
of
(of)
only
on-step
oo
oop
open-file
or
order
os
over
pad
parse
parse-order
(parse-step)
parse-word
pclose
perror
pick
popen
postpone
ppc?
?prefix
<prefixes>
previous
pwd
q!
q@
QNX?
quit
>r
r>
r@
random
range
read
read-file
read-line
recurse
refill
rename-file
repeat
reposition-file
reset-prompt
resize
resize-file
r/o
roll
-roll
rot
-rot
-rot
r.s
rshift
r/w
.s
#s
s"
save-current
s>d
seal
>search
search>
search-wordlist
see
seed-random
see-xt
set-current
set-order
set-prompt
sfind
sh4a?
show-prefixes
sign
signal
sleep
sliteral
sm/rem
solaris?
source
source-id
space
spaces
span
sparc?
spewhash
sprintf
.s-simple
start-clock
start-prefixes
state
stdout-flush
step-break
strcat
strcpy
strdup
/string
strlen
strsave
strtok
swap
system
$system
__tempbase
then
[then]
throw
ticks
time
to
(to2Local)
(To2Local0)
(toF2Local)
(toFLocal)
(toLocal)
(toLocal0)
(toLocal1)
-trailing
true
tuck
type
u<
u.
uclinux?
um*
um/mod
uname
(unlink)
unloop
unseal
until
user
user
(user)
value
variable
(variable)
.ver
verbose?
vocabulary
w!
w@
while
wid-get-name
wid-set-name
wid-set-super
within
w/o
word
?word
wordlist
words
write
write-file
write-line
x.
x86?
xor
zmove
